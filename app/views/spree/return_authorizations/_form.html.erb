<% display_only ||= false %>
<div data-hook="admin_return_authorization_form_fields">
  <table class="table table-bordered index return-items-table">
    <thead>
      <tr data-hook="rma_header">
        <th>
          <% if @return_authorization.allow_return_item_changes? && @return_authorization.new_record? %>
            <%= check_box_tag 'select-all', '0', false, { class: "#{all_item_returned?}" } %>
          <% end %>
        </th>
        <th><%= Spree.t(:product) %></th>
        <th><%= Spree.t(:state) %></th>
        <th><%= Spree.t(:charged) %></th>
        <th><%= Spree.t(:pre_tax_refund_amount) %></th>
        <th><%= Spree.t(:return_options) %></th>
        <th><%= Spree.t(:exchange_for) %></th>
      </tr>
    </thead>
    <tbody>
      <%= f.fields_for :return_items, @form_return_items do |item_fields| %>
        <% return_item = item_fields.object %>
        <% inventory_unit = return_item.inventory_unit %>
        <% editable ||= inventory_unit.shipped? && @return_authorization.allow_return_item_changes? && !return_item.reimbursement && line_item_returnable?(inventory_unit.line_item) && @return_authorization.new_record? %>

        <% if return_item.returnable? %>
          <tr>
            <td class="inventory-unit-checkbox">
              <% if editable %>
                <%= item_fields.hidden_field :inventory_unit_id %>
                <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true }, '0', '1' %>
              <% elsif @return_authorization.persisted? %>  <!-- show checkbox only for show -->
                <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true, disabled: 'disabled' }, '0', '1' %>
              <% end %>
            </td>
            <td>
              <div class="variant-name"><%= inventory_unit.variant.name %></div>
              <div class="variant-options"><%= inventory_unit.variant.options_text %></div>
            </td>
            <td><%= inventory_unit.state.humanize %></td>
            <td>
              <% return_item.set_default_pre_tax_amount %>  <!-- needed when form has errors, and object loses its value -->
              <%= return_item.display_pre_tax_amount %>
            </td>
            <td>
              <%= item_fields.text_field :pre_tax_amount, { class: 'refund-amount-inputs form-control', disabled: true, readonly: true } %>
            </td>
            <td>
              <% if editable %>
              <%= item_fields.select :preferred_reimbursement_type_id, Spree::ReimbursementType.active.collect{|r|[r.name.humanize, r.id]}, {include_blank: true}, {class: 'select2-clear'} %>
              <% end %>
            </td>
            <td>
              <% if editable %>
                <% if return_item.exchange_processed? %>
                  <%= return_item.exchange_variant.exchange_name %>
                <% else %>
                  <%= item_fields.collection_select :exchange_variant_id, return_item.eligible_exchange_variants, :id, :exchange_name, {include_blank: true}, { class: " return-item-exchange-selection form-control", disabled: display_only } %>
                <% end %>
              <% end %>
            </td>
          </tr>
        <% end %>
      <% end %>
    </tbody>
  </table>

  <%= f.field_container :amount, class: ['alert alert-info'] do %>
    <%= Spree.t(:total_pre_tax_refund)%>  : <b id="total_pre_tax_refund"> <%= @return_authorization.display_pre_tax_total.to_html %></b>
  <% end %>

  <%= f.field_container :reason, class: ['form-group'] do %>
    <%= f.label :reason, Spree.t(:reason) %>

    <%= f.select :return_authorization_reason_id, @return_authorization_reasons.collect{ |r|[r.name, r.id] }, { include_blank: true }, { class: 'form-control add-item', "data-placeholder" => Spree.t(:select_a_return_authorization_reason), disabled: display_only } %>
    <%= f.error_message_on :reason %>
  <% end %>

  <%= f.field_container :memo, class: ['form-group'] do %>
    <%= f.label :memo, Spree.t(:memo) %>
    <%= f.text_area :memo, class: 'form-control', disabled: display_only %>
    <%= f.error_message_on :memo %>
  <% end %>
</div>

<% if Spree::Config[:expedited_exchanges] %>
  <div class="expedited-exchanges-warning"><%= Spree.t(:expedited_exchanges_warning, days_window: Spree::Config[:expedited_exchanges_days_window]) %></div>
<% end %>

<script type="text/javascript">

  var selectAllCheckbox = document.getElementById('select-all');
  var checkboxes = document.querySelectorAll('input[type="checkbox"]:not(#select-all)');

  // Add a click event listener to the "Select All" checkbox
  selectAllCheckbox.addEventListener('click', function() {
      // Loop through all checkboxes and set their checked property to match the "Select All" checkbox
      checkboxes.forEach(checkbox => {
          checkbox.checked = selectAllCheckbox.checked;
      });
  });
</script>